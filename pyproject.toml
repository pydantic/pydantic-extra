[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.hatch.version]
path = 'pydantic_extra_types/__init__.py'

[project]
name = 'pydantic-extra-types'
description = 'Extra Pydantic types.'
authors = [
    {name = 'Samuel Colvin', email = 's@muelcolvin.com'},
    {name = 'Yasser Tahiri', email = 'hello@yezz.me'},
]
license = 'MIT'
readme = 'README.md'
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Environment :: Console',
    'Environment :: MacOS X',
    'Framework :: Pydantic',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Internet',
]
requires-python = '>=3.7'
dependencies = [
    'pydantic>=2.0b1',
]
dynamic = ['version']

[project.optional-dependencies]
all = [
    'phonenumbers>=8,<9',
    'pycountry>=22,<23',
]

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
Homepage = 'https://github.com/pydantic/pydantic-extra-types'
Source = 'https://github.com/pydantic/pydantic-extra-types'
Changelog = 'https://github.com/pydantic/pydantic-extra-types/releases'
Documentation = 'https://docs.pydantic.dev/dev-v2/usage/types/types/'

[tool.ruff]
line-length = 120
extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I']
isort = { known-first-party = ['pydantic_extra_types', 'tests'] }
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
mccabe = { max-complexity = 14 }

[tool.ruff.per-file-ignores]
'pydantic_extra_types/__init__.py' = ['F405', 'F403']
'pydantic_extra_types/types/country.py' = ['Q000']

[tool.coverage.run]
source = ['pydantic_extra_types']
branch = true
context = '${CONTEXT}'

[tool.coverage.paths]
source = [
    'pydantic_extra_types/',
    '/Users/runner/work/pydantic-extra-types/pydantic-extra-types/pydantic_extra_types/',
    'D:\a\pydantic-extra-types\pydantic-extra-types\pydantic_extra_types',
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.black]
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = true

[tool.mypy]
exclude = 'pydantic_extra_types/__init__.py'
plugins = 'pydantic.mypy'
python_version = '3.10'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = false
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
implicit_optional = true
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = [
    'dotenv.*',
]
ignore_missing_imports = true


[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = "1"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    'error',
    'ignore:::pkg_resources',
]

# configuring https://github.com/pydantic/hooky
[tool.hooky]
reviewers = ['yezz123', 'Kludex']
require_change_file = false
